package ru.vafeen.concentration.presentation.navigation

import androidx.navigation.NavHostController
import kotlinx.coroutines.flow.StateFlow

/**
 * Интерфейс для управления навигацией с использованием нижней панели навигации.
 * Он предоставляет методы для навигации между экранами и обработки действий "Назад".
 */
internal interface BottomBarNavigator {

    /**
     * Контроллер навигации, который используется для управления переходами между экранами.
     * Он отвечает за навигацию внутри приложения.
     */
    var navController: NavHostController?

    /**
     * Поток состояния, отслеживающий текущий экран приложения.
     * Используется для отслеживания активного экрана в приложении.
     */
    val currentScreen: StateFlow<Screen>

    /**
     * Метод для обработки действия "Назад". Переходит на предыдущий экран в стеке навигации.
     */
    fun back()

    /**
     * Метод для перехода на указанный экран.
     * В случае, если экран не является основным, осуществляется переход к этому экрану,
     * в противном случае возвращаемся назад в стеке навигации.
     *
     * @param screen Целевой экран, на который нужно перейти.
     */
    fun navigateTo(screen: Screen)
}